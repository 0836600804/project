/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BHX_UI.Login;

import BHX_DAO.UsersLoginDAO;
import BHX_UI.Dashboard.frm_dashboard;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author VanPhu
 */
public class frm_updatePasswordAndResetIsLoginFirst extends javax.swing.JFrame {

    private ImageIcon[] images;
    private int currentImageIndex;
    private frm_Login main;
    private String taiKhoan;

    /**
     * Creates new form frm_updatePasswordAndResetIsLoginFirst
     */
    public frm_updatePasswordAndResetIsLoginFirst() {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        // Khởi tạo các hình ảnh
        images = new ImageIcon[4];
        images[0] = getIScaleImage("src\\BHX_IMG\\folderImages\\images\\icons\\login-pass.png", image.getWidth(), image.getHeight());
        images[1] = getIScaleImage("src\\BHX_IMG\\folderImages\\images\\icons\\login-pass2.png", image.getWidth(), image.getHeight());
        images[2] = getIScaleImage("src\\BHX_IMG\\folderImages\\images\\icons\\login-pass3.png", image.getWidth(), image.getHeight());
        images[3] = getIScaleImage("src\\BHX_IMG\\folderImages\\images\\icons\\login-pass4.png", image.getWidth(), image.getHeight());

        // Đặt hình ảnh mặc định
        image.setIcon(images[0]);

        // Sử dụng javax.swing.Timer để thay đổi hình ảnh sau mỗi 2 giây
        Timer timer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Thay đổi hình ảnh
                currentImageIndex = (currentImageIndex + 1) % images.length;
                image.setIcon(images[currentImageIndex]);
            }
        });
        timer.start();
    }

    public frm_updatePasswordAndResetIsLoginFirst(frm_Login main, String taiKhoan) {
        this.main = main;
        this.taiKhoan = taiKhoan;
        txtTK.setText(taiKhoan);
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        // Khởi tạo các hình ảnh
        images = new ImageIcon[4];
        images[0] = getIScaleImage("src\\BHX_IMG\\folderImages\\images\\icons\\login-pass.png", image.getWidth(), image.getHeight());
        images[1] = getIScaleImage("src\\BHX_IMG\\folderImages\\images\\icons\\login-pass2.png", image.getWidth(), image.getHeight());
        images[2] = getIScaleImage("src\\BHX_IMG\\folderImages\\images\\icons\\login-pass3.png", image.getWidth(), image.getHeight());
        images[3] = getIScaleImage("src\\BHX_IMG\\folderImages\\images\\icons\\login-pass4.png", image.getWidth(), image.getHeight());

        // Đặt hình ảnh mặc định
        image.setIcon(images[0]);

        // Sử dụng javax.swing.Timer để thay đổi hình ảnh sau mỗi 2 giây
        Timer timer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Thay đổi hình ảnh
                currentImageIndex = (currentImageIndex + 1) % images.length;
                image.setIcon(images[currentImageIndex]);
            }
        });
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMK_NEW = new BHX_Swings.bhx.swing.textfield.PasswordField();
        txtTK = new BHX_Swings.bhx.swing.textfield.TextField();
        image = new javax.swing.JLabel();
        btnCN = new BHX_Swings.bhx.swing.button.ButtonCustom();
        btnQuayLai = new BHX_Swings.bhx.swing.button.ButtonCustom();
        txtMK_NEW_XN = new BHX_Swings.bhx.swing.textfield.PasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setToolTipText("");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 102));
        jLabel1.setText("CẬP NHẬT MẬT KHẨU");

        txtMK_NEW.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtMK_NEW.setLabelText("Mật  Khẩu Mới");
        txtMK_NEW.setShowAndHide(true);

        txtTK.setEditable(false);
        txtTK.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtTK.setLabelText("Tên Tài Khoản Của Bạn");

        btnCN.setText("Cập nhật");
        btnCN.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnCN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCNActionPerformed(evt);
            }
        });

        btnQuayLai.setText("Quay về");
        btnQuayLai.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnQuayLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuayLaiActionPerformed(evt);
            }
        });

        txtMK_NEW_XN.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtMK_NEW_XN.setLabelText("Xác Nhận Mật Khẩu");
        txtMK_NEW_XN.setShowAndHide(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtMK_NEW, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCN, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtMK_NEW_XN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26)
                        .addComponent(txtTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtMK_NEW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtMK_NEW_XN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCNActionPerformed
        // TODO add your handling code here:
        //
        char[] passwordCharsNEW = txtMK_NEW.getPassword(); // Lấy mật khẩu dưới dạng mảng ký tự
        String passwordNEW = new String(passwordCharsNEW);

        // 
        char[] passwordCharsNEW_XN = txtMK_NEW_XN.getPassword(); // Lấy mật khẩu dưới dạng mảng ký tự
        String passwordNEW_XN = new String(passwordCharsNEW_XN);
        if (txtTK.getText().isEmpty() || passwordNEW.isEmpty() || passwordNEW_XN.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin Tài khoản và Mật khẩu !");
            return;
        }
        if (!passwordNEW.toLowerCase().equals(passwordNEW_XN)) {
            JOptionPane.showMessageDialog(this, "Mật khẩu xác nhận không lớp !");
            return;
        }
        UsersLoginDAO logIN_DAO = new UsersLoginDAO();
        try {
            if (!logIN_DAO.updatePasswordAndResetIsLoginFirst(txtTK.getText(), passwordNEW_XN)) {
                JOptionPane.showMessageDialog(this, "Cập nhật mật khẩu không thành công !");
                return;
            }
            frm_dashboard dashboard = new frm_dashboard(txtTK.getText());
            dispose();
            dashboard.setVisible(true);
            // Nếu cập nhật thành cônh chuyển về form DASH.
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Đã có lỗi xảy ra trong quá trình cập nhật - Vui lòng kiểm tra thông tin tài khoản và password new !");
            return;
        }
    }//GEN-LAST:event_btnCNActionPerformed

    private void btnQuayLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuayLaiActionPerformed
        // TODO add your handling code here:
        main.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnQuayLaiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_updatePasswordAndResetIsLoginFirst.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_updatePasswordAndResetIsLoginFirst.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_updatePasswordAndResetIsLoginFirst.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_updatePasswordAndResetIsLoginFirst.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_updatePasswordAndResetIsLoginFirst().setVisible(true);
            }
        });
    }

    private ImageIcon getIScaleImage(String url, int w, int h) {
        ImageIcon icon = new ImageIcon(url);
        Image img = icon.getImage();
        Image scale = img.getScaledInstance(w, h, Image.SCALE_SMOOTH);
        ImageIcon scalIcon = new ImageIcon(scale);
        return scalIcon;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private BHX_Swings.bhx.swing.button.ButtonCustom btnCN;
    private BHX_Swings.bhx.swing.button.ButtonCustom btnQuayLai;
    private javax.swing.JLabel image;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private BHX_Swings.bhx.swing.textfield.PasswordField txtMK_NEW;
    private BHX_Swings.bhx.swing.textfield.PasswordField txtMK_NEW_XN;
    private BHX_Swings.bhx.swing.textfield.TextField txtTK;
    // End of variables declaration//GEN-END:variables
}
